

v0.5.9
------

New: async.wrapper.timeout(), a wrapper for asynchronous function. Not documented yet.


v0.5.8
------

New: jobContext.abortLoop(), since jobContext.abort() can be looped anyway.


v0.5.7
------

Now jobCallback contains .jobContext which is equals to *this*.


v0.5.6
------

Upgraded dependencies.


v0.5.5
------

New shorthand: async.callTimeout(). API still not freezed, no documentation right now.


v0.5.4
------

Upgraded dependencies (tree-kit).


v0.5.2
------

Tests and documentation about ExecContext.getJobsStatus().


v0.5.1
------

Compatibility-breaking changes:
	* 'progress' event: the object properties' name have changed:
		- 'done' has been replaced by 'resolved' (less ambiguous, since abort, timeout & failure was counted in)
		- 'running' has been replaced by 'pending' (less ambiguous, since the job may have stopped working someway)
		- 'queued' has been replaced by 'waiting' (more appropriated)
New features:
	* 'progress' event properties: resolved, ok, failed, pending, waiting
	* ExecContext.getJobsStatus(): give insightful real-time information about the status of each jobs,
		for flow-control debugging purpose
